<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4020.6">
  <POU Name="F_RemoveSign" Id="{7525b74e-8e17-4835-974f-38ae53f7f2fa}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION F_RemoveSign : STRING(255)
(**************************************************************************************
 * 	Application		:	BoxControl Framework
 *	Revision		:	$Revision: 404529 $
 *	Revision date	:	$Date: 2018-04-23 08:21:38 +0200 (Mo., 23 Apr 2018) $
 *	Last changed by	:	$Author: b7bolm $
 *	URL				:	$URL: http://almscdc.swisslog.com/repo/SWPD/Development/BoxControlFramework/20_Release/trunk/01_Software/BCF/BCF/JumpStart/30_Toolbox/12_StringStream/F_RemoveSign.TcPOU $
 *
 *	Purpose			:	Remove a sign from a string.
 *
 * ------------------------------------------------------------------------------------
 *	Copyright Swisslog [IP AG], Switzerland. All rights reserved.
 * 
 * ------------------------------------------------------------------------------------
 *	
 * 	Revision History: 
 *
 * 	VERSION			DATE			INITIALS			DESCRIPTION
 *	0.1				01.01.2001		swl					Example
 *
 **************************************************************************************)
VAR_INPUT
	InputString		: STRING(255); // Input string
	Sign			: STRING(1); // Sign to remove
END_VAR
VAR
	Idx				: INT; // Iterator
	pASCII_Array	: POINTER TO ARRAY[1..255] OF BYTE;
	pSign			: POINTER TO BYTE;
	ASCII_Value		: INT; // Value
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[// Initialize
F_RemoveSign := '';

// Build ASCII array and sign as byte
pASCII_Array := ADR(InputString);
pSign := ADR(Sign);

// Go Through string
FOR Idx := 1 TO LEN(InputString) DO
	// Get first ASCII sign as INT
	ASCII_Value := BYTE_TO_INT(pASCII_Array^[Idx]);
	
	// Add all except sign to new string
	IF pSign^ <> ASCII_Value THEN
		// Build string
		fbFormatString( sFormat := '%C',
						arg1 	:= F_BYTE(pASCII_Array^[Idx]));
		
		// Return alpha numeric string
		F_RemoveSign := CONCAT(F_RemoveSign, fbFormatString.sOut);
	END_IF
END_FOR]]></ST>
    </Implementation>
    <ObjectProperties>
      <XmlArchive>
        <Data>
          <o xml:space="preserve" t="UMLStereoTypeContainerObject">
            <v n="IsType" t="UMLType">BaseArea</v>
            <v n="Stereotype">""</v>
            <d n="Stereotypes" t="Hashtable" />
          </o>
        </Data>
        <TypeList>
          <Type n="Hashtable">System.Collections.Hashtable</Type>
          <Type n="String">System.String</Type>
          <Type n="UMLStereoTypeContainerObject">{30250973-b110-4e31-b562-c102e042dca4}</Type>
          <Type n="UMLType">{0197b136-405a-42ee-bb27-fd08b621d0cf}</Type>
        </TypeList>
      </XmlArchive>
    </ObjectProperties>
  </POU>
</TcPlcObject>