<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.4">
  <POU Name="F_InstancePathRemovals" Id="{f49f296e-bec7-4bef-92f8-61622e3dcc84}" SpecialFunc="None">
    <Declaration><![CDATA[// removes 'QB2Jumpstart.JumpStart.' from instance path and if RemoveLastPart true, also last part '.yyyyy'
FUNCTION PUBLIC F_InstancePathRemovals

(**************************************************************************************
 * 	Application		:	BoxControl Framework
 *	Revision		  :	$Revision: 461868 $
 *	Revision date	:	$Date: 1979-01-09 14:35:13 +0200 (Di., 09 Jan 1979) $
 *	Last changed by	:	$Author: b7lipim $
 *	URL				:	$URL: http://almscdc.swisslog.com/repo/SWPD/Development/BoxControlFramework/20_Release/branches/R1.x/01_Software/BCF/BCF/JumpStart/20_Product/10_BCF/10_Base/11_Com/12_DebugMsg/00_GVLs/DebugTextBlocks.TcGVL $
 *
 * ------------------------------------------------------------------------------------
 *	Copyright Swisslog [IP AG], Switzerland. All rights reserved.
 * 
 * ------------------------------------------------------------------------------------
 *	
 * 	Revision History: 
 *
 * VERSION DATE         INITIALS     DESCRIPTION
 * 0.0     DD.MM.YYYY   (name)       (explain customized modifications)
 *
 **************************************************************************************)

(********************************************************************************************************************************)
VAR_INPUT
  DestStart             : POINTER TO BYTE                  := 0;     // = ADR(MyString)                    -> start position to concat
  DestEnd               : POINTER TO BYTE                  := 0;     // = ADR(MyString) + SIZEOF(MyString) -> buffer/string end
  (*----------------------------------------------------------------------------------------------------------------------------*)
  RemoveLastPart        : BOOL                             := FALSE; // also removes last (own) part
END_VAR

(********************************************************************************************************************************)
VAR
  Dest                  : POINTER TO BYTE                  := 0;
  Source                : POINTER TO BYTE                  := 0;
  End                   : POINTER TO BYTE                  := 0;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[

(********************************************************************************************************************************)
(** check inputs ****************************************************************************************************************)
IF   (DestStart = 0)         THEN  RETURN;
ELSIF(DestEnd   = 0)         THEN  RETURN;
ELSIF(DestStart >= DestEnd)  THEN  RETURN;
END_IF




(********************************************************************************************************************************)
(** remove 'QB2Jumpstart.JumpStart.' from instance path *************************************************************************)
Source:= DestStart;
(*-- first point ---------------------------------------------------------------------------------------------------------------*)
WHILE(Source^ <> 16#00)
DO
  // point found? -> store position ---------------------------------
  IF (Source^ = 16#2E)  (* '.' *)
  THEN
    Source:= Source + SIZEOF(Source^);
    EXIT;
  END_IF
  // next char ------------------------------------------------------
  Source:= Source + SIZEOF(Source^);
END_WHILE

(*-- second point --------------------------------------------------------------------------------------------------------------*)
WHILE(Source^ <> 16#00)
DO
  // point found? -> store position ---------------------------------
  IF (Source^ = 16#2E)  (* '.' *)
  THEN
    Source:= Source + SIZEOF(Source^);
    EXIT;
  END_IF
  // next char ------------------------------------------------------
  Source:= Source + SIZEOF(Source^);
END_WHILE




(********************************************************************************************************************************)
(** copying text ****************************************************************************************************************)
Dest:= DestStart;
WHILE(Source^ <> 16#00)
DO
  Dest^:= Source^;
  // point found? -> store position ---------------------------------
  IF (Dest^ = 16#2E)  (* '.' *)
  THEN
    End:= Dest;
  END_IF
  // next char ------------------------------------------------------
  Dest  := Dest   + SIZEOF(Dest^);
  Source:= Source + SIZEOF(Source^);
END_WHILE

Dest^:= 16#00;




(********************************************************************************************************************************)
(** remove also last part *******************************************************************************************************)
IF (RemoveLastPart = TRUE)
THEN
  IF (End <> 0)
  THEN
    End^:= 16#00;  // string ends at last found point
  END_IF
END_IF




(********************************************************************************************************************************)
(** done ************************************************************************************************************************)
]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>