<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.4">
  <POU Name="F_StringCopy" Id="{dd0158a1-4dd0-4e8d-808e-7805ffc2f310}" SpecialFunc="None">
    <Declaration><![CDATA[// concats a string
FUNCTION PUBLIC F_StringCopy : POINTER TO BYTE

(**************************************************************************************
 * 	Application		:	BoxControl Framework
 *	Revision		  :	$Revision: 461868 $
 *	Revision date	:	$Date: 1979-01-09 14:35:13 +0200 (Di., 09 Jan 1979) $
 *	Last changed by	:	$Author: b7lipim $
 *	URL				:	$URL: http://almscdc.swisslog.com/repo/SWPD/Development/BoxControlFramework/20_Release/branches/R1.x/01_Software/BCF/BCF/JumpStart/20_Product/10_BCF/10_Base/11_Com/12_DebugMsg/00_GVLs/DebugTextBlocks.TcGVL $
 *
 * ------------------------------------------------------------------------------------
 *	Copyright Swisslog [IP AG], Switzerland. All rights reserved.
 * 
 * ------------------------------------------------------------------------------------
 *	
 * 	Revision History: 
 *
 * VERSION DATE         INITIALS     DESCRIPTION
 * 0.0     DD.MM.YYYY   (name)       (explain customized modifications)
 *
 **************************************************************************************)

(********************************************************************************************************************************)
VAR_INPUT
  DestStart             : POINTER TO BYTE                  := 0;     // = ADR(MyString)                    -> start position to concat
  DestEnd               : POINTER TO BYTE                  := 0;     // = ADR(MyString) + SIZEOF(MyString) -> buffer/string end
  (*----------------------------------------------------------------------------------------------------------------------------*)
  Source                : POINTER TO BYTE                  := 0;     // string to be copied
END_VAR

(********************************************************************************************************************************)
VAR
  DestWork             : POINTER TO BYTE                  := 0;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[
(********************************************************************************************************************************)
(** check inputs ****************************************************************************************************************)
IF   (DestStart = 0)         THEN  F_StringCopy:= 0;          RETURN;
ELSIF(DestEnd   = 0)         THEN  F_StringCopy:= DestStart;  RETURN;
ELSIF(DestStart >= DestEnd)  THEN  F_StringCopy:= DestStart;  RETURN;
ELSIF(Source    = 0)         THEN  F_StringCopy:= DestStart;  RETURN;
END_IF

DestWork:= DestStart;




(********************************************************************************************************************************)
(** copy characters *************************************************************************************************************)
WHILE (Source^ <> 16#00)
DO
  (*-- end of buffer reached --------------------------------------------------------------------------------*)
  IF (DestWork >= DestEnd)
  THEN
    DestWork := DestEnd - SIZEOF(DestWork^); // _DestWork^ hier benutzen
    EXIT;
  END_IF

  (*-- copy character ---------------------------------------------------------------------------------------*)
  DestWork^:= Source^;

  (*-- keep copying -----------------------------------------------------------------------------------------*)
  DestWork:= DestWork + SIZEOF(DestWork^);
  Source  := Source   + SIZEOF(Source^   );

END_WHILE

DestWork^:= 16#00;  // add termination




(********************************************************************************************************************************)
(** done ************************************************************************************************************************)
F_StringCopy:= DestWork;]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>