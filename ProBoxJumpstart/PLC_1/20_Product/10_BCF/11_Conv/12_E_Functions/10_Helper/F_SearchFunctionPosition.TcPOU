<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.4">
  <POU Name="F_SearchFunctionPosition" Id="{39580970-ae82-4d05-a497-87d0a53a62f1}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION F_SearchFunctionPosition : ST_PositionIdent
(**************************************************************************************
 * 	Application		:	BoxControl Framework
 *	Revision		:	$Revision: 404529 $
 *	Revision date	:	$Date: 2018-04-23 08:21:38 +0200 (Mo., 23 Apr 2018) $
 *	Last changed by	:	$Author: b7bolm $
 *	URL				:	$URL: http://almscdc.swisslog.com/repo/SWPD/Development/BoxControlFramework/20_Release/trunk/01_Software/BCF/BCF/JumpStart/20_Product/10_App/12_E_Functions/10_Lib/10_Conv/10_Functions/F_SearchFunctionPosition.TcPOU $
 *
 *	Purpose			:	Search a position in the function registry.
 *
 * ------------------------------------------------------------------------------------
 *	Copyright Swisslog [IP AG], Switzerland. All rights reserved.
 * 
 * ------------------------------------------------------------------------------------
 *	
 * 	Revision History: 
 *
 * 	VERSION			DATE			INITIALS			DESCRIPTION
 *	0.1				01.01.2001		swl					Example
 *
 **************************************************************************************)
VAR_INPUT
	Position			: STRING(NAME_LENGTH); // Name of position
END_VAR

VAR
	NameHashCode		: UDINT; // Name converted to hash code
	eFunctionNumber		: E_FunctionNumber; // Function number
	ZoneNumber			: INT; // Zone number
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[// Initialize
F_SearchFunctionPosition.eFunctionNumber := E_FunctionNumber.F_BEGIN_FUNCTION;
F_SearchFunctionPosition.ZoneNumber		 := 0;

// Build Hash code
NameHashCode := F_CreateHashCode(InputString := Position);

// Loop trough function registry
FOR eFunctionNumber := E_FunctionNumber.F_BEGIN_FUNCTION + 1 TO E_FunctionNumber.F_END_FUNCTION - 1 DO	
	// Compare Hash code of function
	IF FunctionRegistry[eFunctionNumber].HashCode = NameHashCode THEN
		// Compare String name	
		IF F_EqualSisNames(Name1 := FunctionRegistry[eFunctionNumber].FunctionName,
                       Name2 := Position) THEN
			// Function found - return
			F_SearchFunctionPosition.eFunctionNumber := eFunctionNumber;
			F_SearchFunctionPosition.ZoneNumber		 := 0;
			F_SearchFunctionPosition.PositionName    := Position;
			RETURN;
		END_IF
	END_IF

	// Compare Hash code of zones
	FOR ZoneNumber := 1 TO F_GetNumberOfZones(eFunctionNumber := eFunctionNumber) DO
		// If zone number is within the limit
		IF ZoneNumber <= NUMBER_OF_ZONES_PER_FUNCTION THEN 
			// Compare Hash code of zone
			IF FunctionRegistry[eFunctionNumber].Zone[ZoneNumber].HashCode = NameHashCode THEN
				// Compare String name	
				IF F_EqualSisNames(Name1 := FunctionRegistry[eFunctionNumber].Zone[ZoneNumber].ZoneName,
                           Name2 := Position) THEN
					// Zone found - return
					F_SearchFunctionPosition.eFunctionNumber := eFunctionNumber;
					F_SearchFunctionPosition.ZoneNumber		 := ZoneNumber;
					F_SearchFunctionPosition.PositionName    := Position;
					RETURN;
				END_IF
			END_IF
		ELSE
			EXIT;
		END_IF	
	END_FOR
END_FOR

// When nothing was found, try virtual destinations
F_SearchFunctionPosition := F_GetVirtualDestination(Position);]]></ST>
    </Implementation>
    <ObjectProperties>
      <XmlArchive>
        <Data>
          <o xml:space="preserve" t="UMLStereoTypeContainerObject">
            <v n="IsType" t="UMLType">BaseArea</v>
            <v n="Stereotype">""</v>
            <d n="Stereotypes" t="Hashtable" />
          </o>
        </Data>
        <TypeList>
          <Type n="Hashtable">System.Collections.Hashtable</Type>
          <Type n="String">System.String</Type>
          <Type n="UMLStereoTypeContainerObject">{30250973-b110-4e31-b562-c102e042dca4}</Type>
          <Type n="UMLType">{0197b136-405a-42ee-bb27-fd08b621d0cf}</Type>
        </TypeList>
      </XmlArchive>
    </ObjectProperties>
  </POU>
</TcPlcObject>