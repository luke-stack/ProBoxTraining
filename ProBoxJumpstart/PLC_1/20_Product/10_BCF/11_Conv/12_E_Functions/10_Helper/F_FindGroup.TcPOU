<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.4">
  <POU Name="F_FindGroup" Id="{99e4008e-29b6-4caf-b3d0-78a4dd2d58fa}" SpecialFunc="None">
    <Declaration><![CDATA[// returns the group number of the group name or G_BEGIN_GROUP if not found
FUNCTION PUBLIC F_FindGroup : E_GroupNumber

(**************************************************************************************
 * Application   : BoxControl Framework
 * Revision date : $Date: 2013-09-23 11:26:06 +0200 (Wed, 23 Sep 2015) $
 * Author        : CDC
 * ------------------------------------------------------------------------------------
 * © Swisslog AG * Swisslog is not liable for any usage of this source code that is not agreed
 * on between Swisslog and the other party. The mandatory legal liability remains * unaffected.
 * ------------------------------------------------------------------------------------
 * Project revision history:
 *
 * VERSION DATE         INITIALS     DESCRIPTION
 * 0.0     DD.MM.YYYY   (name)       (explain customized modifications)
 *
 **************************************************************************************)

//***********************************************************************************************************
VAR_INPUT
  Name                  : STRING[NAME_LENGTH]         := '';    // name of position
END_VAR

//***********************************************************************************************************
VAR
  eGroupNumber          : E_GroupNumber               := 0;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[
// string length is roughly 12chars -> hashcode is not neccessary
FOR eGroupNumber := E_GroupNumber.G_BEGIN_GROUP + 1 TO E_GroupNumber.G_END_GROUP - 1 DO
	IF(F_EqualSisNames(Name1:= GroupRegistry[eGroupNumber].GroupName,
					 Name2:= Name) = TRUE)
	THEN
		F_FindGroup:= eGroupNumber;
		RETURN;
	END_IF

END_FOR

// done
F_FindGroup:= E_GroupNumber.G_BEGIN_GROUP;]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>