<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.9">
  <POU Name="FB_PB_FunctionConv" Id="{7af2c316-47b9-496c-8bce-748e4ac5a416}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK INTERNAL FB_PB_FunctionConv EXTENDS FB_FunctionConv
VAR_INPUT
END_VAR
VAR_OUTPUT
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="M_GetNextTransportData" Id="{1606a131-8245-457c-81a1-5089da2a9e98}">
      <Declaration><![CDATA[METHOD PROTECTED M_GetNextTransportData : REFERENCE TO ST_TransportData

VAR_INPUT
	mZoneNumber 	: INT; // Number of the zone
END_VAR

VAR
	NextFunction	: E_FunctionNumber;
	TempCopy		: E_FunctionNumber;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
//Solves BCFD-11487 M_GetTransportData returns TransportData for wrong zone (in some situations)
//Solves BCFD-11583 HandoverState enters Active when next is Taking over from another function

//when Next function transport data is expected, we need to make sure that M_GetNextTransportData return correct data (Next -> Previus)
NextFunction := FunctionInterface.In.eNextFunctionNumber;
IF(__ISVALIDREF(FunctionRegistry[NextFunction].rFunctionInterface)) THEN
	TempCopy := FunctionRegistry[NextFunction].rFunctionInterface.In.eNextFunctionNumber;
	FunctionRegistry[NextFunction].rFunctionInterface.In.eNextFunctionNumber := E_FunctionNumber.F_BEGIN_FUNCTION;
	M_GetNextTransportData REF= SUPER^.M_GetNextTransportData(mZoneNumber);
	FunctionRegistry[NextFunction].rFunctionInterface.In.eNextFunctionNumber := TempCopy;
ELSE
	M_GetNextTransportData REF= SUPER^.M_GetNextTransportData(mZoneNumber);
END_IF
		]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_GetPreviousTransportData" Id="{efa2c289-cb93-4e1c-8808-5f87bbf7e3e8}">
      <Declaration><![CDATA[METHOD PROTECTED M_GetPreviousTransportData: REFERENCE TO ST_TransportData

VAR_INPUT
	mZoneNumber 	: INT; // Number of the zone
END_VAR

VAR
	PrevFunction	: E_FunctionNumber;
	TempCopy		: E_FunctionNumber;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
//Solves BCFD-11487 M_GetTransportData returns TransportData for wrong zone (in some situations)
//Solves BCFD-11583 HandoverState enters Active when next is Taking over from another function

//when previous function transport data is expected, we need to make sure that M_GetNextTransportData return correct data (prevous ->Next)
PrevFunction := FunctionInterface.In.ePrevFunctionNumber;
IF(__ISVALIDREF(FunctionRegistry[PrevFunction].rFunctionInterface)) THEN
	TempCopy := FunctionRegistry[PrevFunction].rFunctionInterface.In.ePrevFunctionNumber;
	FunctionRegistry[PrevFunction].rFunctionInterface.In.ePrevFunctionNumber := E_FunctionNumber.F_BEGIN_FUNCTION;
	M_GetPreviousTransportData REF= SUPER^.M_GetPreviousTransportData(mZoneNumber);
	FunctionRegistry[PrevFunction].rFunctionInterface.In.ePrevFunctionNumber := TempCopy;
ELSE
	M_GetPreviousTransportData REF= SUPER^.M_GetPreviousTransportData(mZoneNumber);
END_IF
		]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_PB_FunctionConv">
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="FB_PB_FunctionConv.M_GetNextTransportData">
      <LineId Id="146" Count="1" />
      <LineId Id="135" Count="0" />
      <LineId Id="148" Count="0" />
      <LineId Id="66" Count="0" />
      <LineId Id="119" Count="0" />
      <LineId Id="131" Count="0" />
      <LineId Id="118" Count="0" />
      <LineId Id="122" Count="2" />
      <LineId Id="133" Count="1" />
      <LineId Id="132" Count="0" />
      <LineId Id="31" Count="0" />
    </LineIds>
    <LineIds Name="FB_PB_FunctionConv.M_GetPreviousTransportData">
      <LineId Id="112" Count="0" />
      <LineId Id="114" Count="0" />
      <LineId Id="113" Count="0" />
      <LineId Id="101" Count="0" />
      <LineId Id="88" Count="9" />
      <LineId Id="32" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>