<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.4">
  <POU Name="FB_PalletMagazineAddonEmulation" Id="{5aebbc14-9a6e-49d2-9a69-3f43ca660178}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_PalletMagazineAddonEmulation EXTENDS FB_FunctionConvEmulation
(**************************************************************************************
 * 	Application		:	BoxControl Framework
 *	Revision		:	$Revision: q8hedls $
 *	Revision date	:	$Date: $
 *	Last changed by	:	$Author:  $
 *	URL				:	$URL:  $
 *
 *	Purpose			:	Emulation of inOutFeed
 *
 * ------------------------------------------------------------------------------------
 *	Copyright Swisslog [IP AG], Switzerland. All rights reserved.
 * 
 * ------------------------------------------------------------------------------------
 *	
 * 	Revision History: 
 *
 * 	VERSION			DATE			INITIALS			DESCRIPTION
 *	0.1				26.04.2019		SHE					LowLiftUnitEmulation
 *
 **************************************************************************************)
VAR_INPUT
	Config							: ST_CFG_PalletMagazineEmulation;
END_VAR 

VAR
	pFunction						: POINTER TO FB_PalletMagazineAddon; // Address to function
	rFunction						: REFERENCE TO FB_PalletMagazineAddon; // Reference to function	
	fbLoadstackerLiftControl 		: FB_StackerLiftControlEmulation; // Lift control emulation
	fbPalletCounter					: FB_LS_Emu_PalletCounter();	
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[(**************************************************************************************************************
   Initialization
***************************************************************************************************************)
//initialize configuration of lift
A_Init();

(**************************************************************************************************************
   Update reference
***************************************************************************************************************)
A_UpdateReference();

(**************************************************************************************************************
   Emulation
***************************************************************************************************************)
// If emulation function is initialized
IF FunctionData.Init THEN

	// Update data of real object
	M_UpdateRealObjectData();
	
	// Handle external Subsystem-Subsystem interfaces
	// not needed for Add On emulation
	//A_ExternalSTI();
	
	// Call Lift control
	fbLoadstackerLiftControl(
		LiftRange				:= Config.MaxLiftPosition,
		DriveRunUpLift			:= rFunction.HW_Outputs.LiftUp, 
		DriveRunDownLift		:= rFunction.HW_Outputs.LiftDown);

	//Counts number of pallets left in stack	
	fbPalletCounter(
		RealFunctionNumber		:= rFunction.ConfigFunction.FunctionLink.eFunctionNumber, 
		RealZoneNumber			:= rFunction.ConfigFunction.FunctionLink.ZoneNumber, 
		RealLoadstackerState	:= rFunction.BaseFunctionData.States.eState, 
		RealLoadStackerMode		:= rFunction.Inputs.CtrlIn.Mode, 
		ConfigNumberPalletStack	:= Config.NumberPalletStack, 
		ConfigNumberPalletFull	:= Config.NumberPalletFull);
	
	// Overwrite inputs
	A_OverWriteInputs();
END_IF]]></ST>
    </Implementation>
    <Action Name="A_Init" Id="{5339b404-96e7-4866-b042-b91f9718a554}">
      <Implementation>
        <ST><![CDATA[(**************************************************************************************
 * 	NAME		A_Init
 * 	FUNCTION	Initialize emulated dummy function
 **************************************************************************************)

// If dummy function is not initialized
IF NOT FunctionData.Init Then
	// Check that linked dummy function number is valid
	IF eFunctionNumber > E_FunctionNumber.F_BEGIN_FUNCTION AND
	   eFunctionNumber < E_FunctionNumber.F_END_FUNCTION THEN   
		
		// Check if the real module is initialized
		IF F_IsFunctionInitialized(eFunctionNumber := eFunctionNumber) THEN
			// Module is initialized
			FunctionData.Init:= TRUE;
			
			// Send debug message
			DebugMsg := CONCAT('Initialization done. Element Function: ', FunctionRegistry[eFunctionNumber].FunctionName);
			fbDebugMsg.M_SendInfoMsg(DebugMsg);
			
			// Initialize real module
			F_InitializeFunction(eFunctionNumber := eFunctionNumber);
		END_IF
	END_IF
END_IF
]]></ST>
      </Implementation>
    </Action>
    <Action Name="A_OverWriteInputs" Id="{1e4e3187-d399-4d56-880e-837f81c86207}">
      <Implementation>
        <ST><![CDATA[(**************************************************************************************
 * 	NAME		A_OverWriteInputs
 * 	FUNCTION	Overwrite inputs for emulation
 **************************************************************************************)


//Lifting emulation
rFunction.HW_Inputs.SensorPosDown 				:= fbLoadstackerLiftControl.LiftPosDown;
rFunction.HW_Inputs.SensorPosMiddle 			:= fbLoadstackerLiftControl.LiftPosMiddleAbove OR fbLoadstackerLiftControl.LiftPosMiddleBelow;
rFunction.HW_Inputs.SensorPosUp 				:= fbLoadstackerLiftControl.LiftPosUp;

rFunction.HW_Inputs.SignalMotorUnitOK 			:= TRUE; 
rFunction.HW_Inputs.SensorEndlimitDown 			:= TRUE;
rFunction.HW_Inputs.SensorEndlimitUP 			:= TRUE;
rFunction.HW_Inputs.SensorOccupied				:= fbPalletCounter.SensorOccupied;
rFunction.HW_Inputs.SensorFull					:= fbPalletCounter.SensorMagazineFull;

]]></ST>
      </Implementation>
    </Action>
    <Action Name="A_UpdateReference" Id="{7baa0d3f-2176-4fa9-a6e1-8f8e23e6ae9a}">
      <Implementation>
        <ST><![CDATA[(**************************************************************************************
 * 	NAME		A_UpdateReference
 * 	FUNCTION	Update reference to real object
 **************************************************************************************)

// Check valid function number
IF eFunctionNumber > E_FunctionNumber.F_BEGIN_FUNCTION AND
   eFunctionNumber < E_FunctionNumber.F_END_FUNCTION THEN

	// Is reference valid  
	IF __ISVALIDREF(FunctionRegistry[eFunctionNumber].rFunction) THEN
		// Build address to reference
		pFunction := ADR(FunctionRegistry[eFunctionNumber].rFunction);

		// If address is possible
		IF pFunction <> 0 THEN
			// Build reference to memory
			rFunction REF= pFunction^;
		ELSE
			// Reinitialize module
			FunctionData.Init:= FALSE;
		END_IF
	ELSE
		// Reinitialize module
		FunctionData.Init:= FALSE;
	END_IF
END_IF
		]]></ST>
      </Implementation>
    </Action>
    <LineIds Name="FB_PalletMagazineAddonEmulation">
      <LineId Id="3" Count="28" />
      <LineId Id="38" Count="1" />
      <LineId Id="88" Count="5" />
      <LineId Id="40" Count="3" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_PalletMagazineAddonEmulation.A_Init">
      <LineId Id="2" Count="24" />
      <LineId Id="1" Count="0" />
    </LineIds>
    <LineIds Name="FB_PalletMagazineAddonEmulation.A_OverWriteInputs">
      <LineId Id="2" Count="3" />
      <LineId Id="8" Count="3" />
      <LineId Id="14" Count="0" />
      <LineId Id="16" Count="0" />
      <LineId Id="25" Count="3" />
      <LineId Id="1" Count="0" />
      <LineId Id="30" Count="1" />
      <LineId Id="29" Count="0" />
    </LineIds>
    <LineIds Name="FB_PalletMagazineAddonEmulation.A_UpdateReference">
      <LineId Id="2" Count="26" />
      <LineId Id="1" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>