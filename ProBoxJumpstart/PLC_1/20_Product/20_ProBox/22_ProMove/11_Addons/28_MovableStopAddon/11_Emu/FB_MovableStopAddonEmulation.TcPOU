<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.9">
  <POU Name="FB_MovableStopAddonEmulation" Id="{37f76e61-6f92-4338-83d2-137fb83edc96}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_MovableStopAddonEmulation EXTENDS FB_FunctionConvEmulation
(**************************************************************************************
 * 	Application		:	BoxControl Framework
 *	Revision		:	$Revision: q8hedls $
 *	Revision date	:	$Date: $
 *	Last changed by	:	$Author:  $
 *	URL				:	$URL:  $
 *
 *	Purpose			:	Emulation of inOutFeed
 *
 * ------------------------------------------------------------------------------------
 *	Copyright Swisslog [IP AG], Switzerland. All rights reserved.
 * 
 * ------------------------------------------------------------------------------------
 *	
 * 	Revision History: 
 *
 * 	VERSION			DATE			INITIALS			DESCRIPTION
 *	0.1				26.04.2019		SHE					LowLiftUnitEmulation
 *
 **************************************************************************************)
VAR_INPUT
	Config							: ST_CFG_TransferUnitEmulation;
END_VAR 

VAR
	pFunction						: POINTER TO FB_MovableStopAddon; // Address to function
	rFunction						: REFERENCE TO FB_MovableStopAddon; // Reference to function
	fbLiftControl 					: FB_LiftControlEmulation; // Lift control emulation
	fbMotorControlLift				: FB_MotorControlEmulation; // Motor control emulation
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[(**************************************************************************************************************
   Initialization
***************************************************************************************************************)
A_Init();

(**************************************************************************************************************
   Update reference
***************************************************************************************************************)
A_UpdateReference();

(**************************************************************************************************************
   Emulation
***************************************************************************************************************)
// If emulation function is initialized
IF FunctionData.Init THEN

	// Update data of real object
	M_UpdateRealObjectData();
	
	// Handle external Subsystem-Subsystem interfaces
	A_ExternalSTI();
	
	// Call Lift control
	fbLiftControl(
		Config := Config, 
		DriveRun_Lift := rFunction.HW_Outputs.Drive_Run_UpDown);	
		
	// Call motor control lift		
	fbMotorControlLift(
		Run_fw:= rFunction.HW_Outputs.Drive_Run_UpDown, 
		Run_bw:= FALSE, 
		CommandSpeed:= 100, 
		SpeedRatio:= rFunction.ConfigFunction.Zone[1].SpeedRatio);
					
	// Overwrite inputs
	A_OverWriteInputs();
END_IF]]></ST>
    </Implementation>
    <Action Name="A_Init" Id="{8b659244-d298-4423-9d49-309bff036474}">
      <Implementation>
        <ST><![CDATA[(**************************************************************************************
 * 	NAME		A_Init
 * 	FUNCTION	Initialize emulated dummy function
 **************************************************************************************)

// If dummy function is not initialized
IF NOT FunctionData.Init Then
	// Check that linked dummy function number is valid
	IF eFunctionNumber > E_FunctionNumber.F_BEGIN_FUNCTION AND
	   eFunctionNumber < E_FunctionNumber.F_END_FUNCTION THEN   
		
		// Check if the real module is initialized
		IF F_IsFunctionInitialized(eFunctionNumber := eFunctionNumber) THEN
			// Module is initialized
			FunctionData.Init:= TRUE;
			
			// Send debug message
			DebugMsg := CONCAT('Initialization done. Element Function: ', FunctionRegistry[eFunctionNumber].FunctionName);
			fbDebugMsg.M_SendInfoMsg(DebugMsg);
			
			// Initialize real module
			F_InitializeFunction(eFunctionNumber := eFunctionNumber);
		END_IF
	END_IF
END_IF
]]></ST>
      </Implementation>
    </Action>
    <Action Name="A_OverWriteInputs" Id="{db3d9ede-e42f-4437-8519-80873cc3586d}">
      <Implementation>
        <ST><![CDATA[(**************************************************************************************
 * 	NAME		A_OverWriteInputs
 * 	FUNCTION	Overwrite inputs for emulation
 **************************************************************************************)


//Lifting emulation
rFunction.HW_Inputs.LiftDown := fbLiftControl.Lift_Pos_Down;	
rFunction.HW_Inputs.LiftUp := fbLiftControl.Lift_Pos_Up;												]]></ST>
      </Implementation>
    </Action>
    <Action Name="A_UpdateReference" Id="{792b1654-bcc6-498b-9cb9-5b345e69b07c}">
      <Implementation>
        <ST><![CDATA[(**************************************************************************************
 * 	NAME		A_UpdateReference
 * 	FUNCTION	Update reference to real object
 **************************************************************************************)

// Check valid function number
IF eFunctionNumber > E_FunctionNumber.F_BEGIN_FUNCTION AND
   eFunctionNumber < E_FunctionNumber.F_END_FUNCTION THEN

	// Is reference valid  
	IF __ISVALIDREF(FunctionRegistry[eFunctionNumber].rFunction) THEN
		// Build address to reference
		pFunction := ADR(FunctionRegistry[eFunctionNumber].rFunction);

		// If address is possible
		IF pFunction <> 0 THEN
			// Build reference to memory
			rFunction REF= pFunction^;
		ELSE
			// Reinitialize module
			FunctionData.Init:= FALSE;
		END_IF
	ELSE
		// Reinitialize module
		FunctionData.Init:= FALSE;
	END_IF
END_IF
		]]></ST>
      </Implementation>
    </Action>
    <Method Name="FB_init" Id="{e8b065b7-7fbd-4480-88a6-a03025d83692}">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[//Set default values
Config.Position_Down:=0;
Config.Position_Max_Down:=0;
Config.Position_Up:=25;
Config.Position_Max_Up:=30;]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_MovableStopAddonEmulation">
      <LineId Id="3" Count="35" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_MovableStopAddonEmulation.A_Init">
      <LineId Id="2" Count="24" />
      <LineId Id="1" Count="0" />
    </LineIds>
    <LineIds Name="FB_MovableStopAddonEmulation.A_OverWriteInputs">
      <LineId Id="2" Count="7" />
      <LineId Id="1" Count="0" />
    </LineIds>
    <LineIds Name="FB_MovableStopAddonEmulation.A_UpdateReference">
      <LineId Id="2" Count="26" />
      <LineId Id="1" Count="0" />
    </LineIds>
    <LineIds Name="FB_MovableStopAddonEmulation.FB_init">
      <LineId Id="11" Count="0" />
      <LineId Id="7" Count="1" />
      <LineId Id="10" Count="0" />
      <LineId Id="9" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>