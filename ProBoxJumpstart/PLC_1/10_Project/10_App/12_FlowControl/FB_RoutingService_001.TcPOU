<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.9">
  <POU Name="FB_RoutingService_001" Id="{474a0535-b9ae-418c-a013-e57613c2229c}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_RoutingService_001
VAR_INPUT
	///Calling function number
	eFunctionNumber: E_FunctionNumber;
END_VAR
VAR
	///Debug message service
	fbDebugMsg: FB_DebugMsg;
	///Debug message
	DebugMsg: T_MAXSTRING;
	CurrentZone : ST_ZoneData;
	NextZone : ST_ZoneData;
	TUDest : E_FunctionNumber;
	TUIndexDelete : DINT;
	TU_ID : STRING(Conveyor.TU_ID_STRINGLENGTH);
END_VAR
VAR_OUTPUT
	///Result next function number
	eNextFunctionNumber: E_FunctionNumber;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[
// Example 
// Initialize variable
eNextFunctionNumber := F_BEGIN_FUNCTION;

CASE eFunctionNumber OF
	
	E_FunctionNumber.F_10_001_0200_01_0:
		TUDest := F_PB_GetTuDestination(eFunctionNumber:= eFunctionNumber, 1,1);
		IF TUDest = E_FunctionNumber.F_10_001_0203_01_0 THEN
			eNextFunctionNumber := E_FunctionNumber.F_10_001_0201_01_0;
		END_IF
		
	E_FunctionNumber.F_10_001_0203_01_0:
		NextZone := F_GetZoneData(E_FunctionNumber.F_10_001_0204_01_0, 1);
		IF NOT NextZone.TransportControlData.Occupied THEN
			eNextFunctionNumber := E_FunctionNumber.F_10_001_0204_01_0;
		END_IF
	
	E_FunctionNumber.F_10_001_0204_01_0:
		TUDest := F_PB_GetTuDestination(eFunctionNumber:= eFunctionNumber, 1,1);
		IF TUDest = E_FunctionNumber.F_10_001_0233_01_0 THEN
			eNextFunctionNumber := E_FunctionNumber.F_10_001_0233_01_0;
		ELSE
			eNextFunctionNumber := E_FunctionNumber.F_10_002_0206_01_0;
		END_IF
		
	E_FunctionNumber.F_10_001_0209_01_0:
		TUDest := F_PB_GetTuDestination(eFunctionNumber:= eFunctionNumber, 1,1);
		IF TUDest = E_FunctionNumber.F_10_001_0215_01_0 THEN
			eNextFunctionNumber := E_FunctionNumber.F_10_001_0214_01_0;
		ELSE
			eNextFunctionNumber := E_FunctionNumber.F_10_001_0211_01_0;
		END_IF
		
	E_FunctionNumber.F_10_001_0212_01_0:
		TUDest := F_PB_GetTuDestination(eFunctionNumber:= eFunctionNumber, 1,1);
		NextZone := F_GetZoneData(E_FunctionNumber.F_10_001_0213_01_0, 1);
		IF TUDest = E_FunctionNumber.F_10_001_0213_01_0  AND NOT NextZone.TransportControlData.Occupied THEN
			eNextFunctionNumber := E_FunctionNumber.F_10_001_0213_01_0;
		ELSE
			eNextFunctionNumber := E_FunctionNumber.F_10_001_0218_01_0;
		END_IF
		
	E_FunctionNumber.F_10_001_0222_01_0:
		TUDest := F_PB_GetTuDestination(eFunctionNumber:= eFunctionNumber, 1,1);
		NextZone := F_GetZoneData(E_FunctionNumber.F_10_001_0230_01_0, 1);
		IF (TUDest = E_FunctionNumber.F_10_001_0232_01_0 OR TUDest = E_FunctionNumber.F_10_001_0207_01_0) AND NOT NextZone.TransportControlData.Occupied THEN
			eNextFunctionNumber := E_FunctionNumber.F_10_001_0230_01_0;
		ELSE
			eNextFunctionNumber := E_FunctionNumber.F_10_001_0225_01_0;
		END_IF
		
	E_FunctionNumber.F_10_001_0230_01_0:
		TUDest := F_PB_GetTuDestination(eFunctionNumber:= eFunctionNumber, 1,1);
		IF TUDest = E_FunctionNumber.F_10_001_0232_01_0 THEN
			eNextFunctionNumber := E_FunctionNumber.F_10_001_0232_01_0;
		ELSE
			eNextFunctionNumber := E_FunctionNumber.F_10_001_0207_01_0;
		END_IF
		
		
	// IF position occupied then get data index 
	//When pos not occupied then delete TU data
	
	F_DeleteTU_Data(F_GetTU_DataIndex(E_FunctionNumber.F_10_001_0233_01_0, 1), FALSE);
	
	F_DeleteTU_Data(F_GetTU_DataIndex(E_FunctionNumber.F_10_001_0215_02_0, 1), FALSE);
	
	F_DeleteTU_Data(F_GetTU_DataIndex(E_FunctionNumber.F_10_001_0207_01_0, 1), FALSE);
	
	F_DeleteTU_Data(F_GetTU_DataIndex(E_FunctionNumber.F_10_001_0232_01_0, 1), FALSE);
	
	F_DeleteTU_Data(F_GetTU_DataIndex(E_FunctionNumber.F_10_001_0213_01_0, 1), FALSE);
	
	//POR1 an an sis dog schicken von ausgang
	//In sis dog when por1 gekommen schick rtq und tdq
ELSE
	DebugMsg := CONCAT('Routing function not defined. FunctionNumber: ', INT_TO_STRING(eFunctionNumber));
	fbDebugMsg.M_SendInfoMsg(DebugMsg);
END_CASE

]]></ST>
    </Implementation>
    <LineIds Name="FB_RoutingService_001">
      <LineId Id="3" Count="8" />
      <LineId Id="96" Count="0" />
      <LineId Id="12" Count="1" />
      <LineId Id="44" Count="0" />
      <LineId Id="46" Count="0" />
      <LineId Id="51" Count="0" />
      <LineId Id="47" Count="1" />
      <LineId Id="45" Count="0" />
      <LineId Id="35" Count="1" />
      <LineId Id="39" Count="0" />
      <LineId Id="94" Count="0" />
      <LineId Id="40" Count="1" />
      <LineId Id="43" Count="0" />
      <LineId Id="38" Count="0" />
      <LineId Id="53" Count="0" />
      <LineId Id="55" Count="1" />
      <LineId Id="93" Count="0" />
      <LineId Id="57" Count="2" />
      <LineId Id="54" Count="0" />
      <LineId Id="60" Count="0" />
      <LineId Id="62" Count="0" />
      <LineId Id="92" Count="0" />
      <LineId Id="150" Count="0" />
      <LineId Id="63" Count="3" />
      <LineId Id="61" Count="0" />
      <LineId Id="67" Count="0" />
      <LineId Id="69" Count="0" />
      <LineId Id="74" Count="0" />
      <LineId Id="152" Count="0" />
      <LineId Id="70" Count="3" />
      <LineId Id="68" Count="0" />
      <LineId Id="97" Count="0" />
      <LineId Id="99" Count="5" />
      <LineId Id="98" Count="0" />
      <LineId Id="105" Count="0" />
      <LineId Id="148" Count="0" />
      <LineId Id="107" Count="0" />
      <LineId Id="156" Count="1" />
      <LineId Id="118" Count="0" />
      <LineId Id="139" Count="0" />
      <LineId Id="141" Count="1" />
      <LineId Id="144" Count="2" />
      <LineId Id="154" Count="1" />
      <LineId Id="158" Count="2" />
      <LineId Id="14" Count="4" />
      <LineId Id="2" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>